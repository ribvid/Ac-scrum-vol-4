extends layout

block content
    link(rel='stylesheet', href='/stylesheets/vendor/flatpickr.min.css')
    script(src='/javascripts/vendor/flatpickr.min.js')
    script(src='/javascripts/vendor/moment.js')
    link(href='/stylesheets/vendor/select2.min.css', rel='stylesheet')
    link(href='/stylesheets/vendor/select2-bootstrap.min.css', rel='stylesheet')

    body
        main.container(role="main")
            .container.theme-showcase
                .page-header
                    h3 My time logs for task: #{task_name}
                .container
                    nav.navbar.navbar-expand-lg.navbar-light.bg-light
                        ul.navbar-nav.mr-auto
                            li.nav-item
                                a.nav-link(href='/dashboard')
                                    i.fas.fa-chevron-left
                                    |   Dashboard
                            li.nav-item
                                a.nav-link(href='/timetables')
                                    |   Timetables
                    hr
                div.main.container
                      
                    .card
                        .card-header#bg-theme
                            | My time logs
                        .card-body
                            table.table.table-bordered.table-hover(summary="List of all time logs per date")
                                thead.thead-dark
                                    tr
                                        th(scope="col") Project
                                        th(scope="col") Story
                                        th(scope="col") Task
                                        th(scope="col") Log date
                                        th(scope="col") Estimated time
                                        th(scope="col") Logged time
                                        th(scope="col") Edit
                                        //th(scope="col") Delete
                                tbody
                                    each log in logs
                                        tr
                                            td #{log.Task.Story.Sprint.Project.name}
                                            td #{log.Task.Story.name}
                                            td(title=log.Task.description) #{log.Task.name}
                                            td #{moment(log.loggedDate, 'YYYY-MM-DD hh:mm').format("DD. MM. YYYY HH:mm")}
                                            td #{Math.round(log.remainingTime * 6 * 2) / 2}
                                            td #{(log.loggedTime).toFixed(2)}
                                            if log.Task.status != 4
                                                if log.ghost == -1
                                                    td
                                                        button.btn.btn-warning(onclick="addMe(this, " + log.ghost + ")") Edit
                                                    //td
                                                        button.btn.btn-danger(disabled=true onclick="alertWindow(" + log.ghost + ")") Delete
                                                else
                                                    td
                                                        a.btn.btn-warning(href="/timetables/edit/" + log.id) Edit
                                                    //td
                                                        a.btn.btn-danger(onclick="alertWindow(" + log.id + ")") Delete
                                            else
                                                td
                                                    button.btn.btn-warning(disabled=true) Edit
                                                //td
                                                    button.btn.btn-danger( disabled=true onclick="alertWindow(" + log.id + ")") Delete

    script.
        function alertWindow(id){
            if(id > -1){
                if(confirm("Are you sure you want to delete this log entry?")){
                    window.location.href = "/timetables/delete/" + id 
                }
            } else{
                console.log(id)
                alert("This log cannot be deleted, because it is not stored in the database.");
            }
            
        }

        function addMe(id, ghost){
            console.log(id);
            if(ghost == -1){
                //console.log($(id).parent());
                let el = $(id).parent().parent().children();
                console.log(el);
                let data = [];
                for(ele in el){
                    if(!isNaN(ele)){
                        data.push(el[ele].innerHTML)
                        console.log(el[ele].innerHTML);
                    }
                }
                data.pop();
                let task_id = window.location.href.split("/")
                task_id = task_id[task_id.length-1];
                data.push(task_id);

                console.log(data);

                var xhr = new XMLHttpRequest();
                xhr.open("POST", "/timetables/add/", true);
                xhr.setRequestHeader('Content-Type', 'application/json');
                xhr.send(JSON.stringify({
                    data: data
                }));
                xhr.onreadystatechange=function(){
                    console.log(xhr.responseText);
                    window.location.href = xhr.responseText;
                }
            }
            
        }